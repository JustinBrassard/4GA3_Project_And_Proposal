<<<<<<< Updated upstream
tinytex::install_tinytex()
=======
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library (readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
library(readxl)
Motor_Vehicle_Collisions_with_KSI_Data_True <- read_excel("data/Motor Vehicle Collisions/Motor Vehicle Collisions with KSI Data True.xlsx")
View(Motor_Vehicle_Collisions_with_KSI_Data_True)
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
library(readxl)
Stationary_Sign_Locations_True <- read_excel("data/Stationary Sign locations/Stationary Sign Locations True.xlsx")
View(Stationary_Sign_Locations_True)
library(readxl)
School_Locations_True <- read_excel("data/point-school-locations-wgs84/School Locations True.xlsx")
View(School_Locations_True)
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
library(tinytex)
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolfile))
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolfile))
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 5, iconHeight = 5
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 10, iconHeight = 10
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 15, iconHeight = 15
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 20, iconHeight = 20
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 15, iconHeight = 15
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 15, iconHeight = 15
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 15, iconHeight = 15
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
summary(Collisions.sf)
summary(Collisions)
View(Motor_Vehicle_Collisions_with_KSI_Data_True)
View(Collisions)
View(Collisions.sf)
summary(Collisions.sf)
summary(Collisions.sf$geometry)
summary(Collisions.sf)
class(collisions)
class(Collisions)
collisions_one <- st_union(Collisions)
collisions_one <- st_union(Collisions.sf)
plot(collisions_one)
plot(collisions_flat)
collisions_flat <- st_transform(collisions_one, crs = 6345)
collisions_flat <- st_wrap_dateline(collisions_one, options = "WRAPDATELINE=YES", quiet = TRUE)
plot(collisions_flat)
county_owin <- as.owin(as_Spatial(county_flat))
library(spatstat)
county_owin <- as.owin(as_Spatial(county_flat))
collisions_owin <- as.owin(as_Spatial(collisions_flat))
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
summary(Collisions.sf)
library(spatstat)
library(spatstat)
toronto_boundary <- st_read(
"data/toronto-boundary-wgs84/citygcs_regional_mun_wgs84.shp")
toronto_boundary
summary(toronto_boundary)
class(toronto_boundary)
boundary_one <- st_union(toronto_boundary)
plot(boundary_one)
boundary_flat <- st_transform(boundary_one, crs = 6345)
plot(boundary_flat)
county_owin <- as.owin(as_Spatial(county_flat))
boundary_owin <- as.owin(as_Spatial(boundary_flat))
library(maptools)
boundary_owin <- as.owin(as_Spatial(boundary_flat))
boundary_w <- as.owin(as_Spatial(boundary_flat))
collisions.ppp <- as.ppp(collisions.sf, W = boundary_w)
collisions.ppp <- as.ppp(Collisions.sf, W = boundary_w)
boundary_w <- as.owin(as_Spatial(boundary_flat))
boundary_flat <- st_transform(boundary_one)
boundary_flat <- st_transform(boundary_one, crs = 4326)
plot(boundary_flat)
boundary_w <- as.owin(as_Spatial(boundary_flat))
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
#right now I used the 'import dataset' tool to bring in the Excel data downloaded from the GitHub, this is trying to rip straight from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets (have to use 'lng' & 'lat' for leaflet)
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
summary(Collisions.sf)
library(spatstat)
library(maptools)
toronto_boundary <- st_read(
"data/toronto-boundary-wgs84/citygcs_regional_mun_wgs84.shp")
class(toronto_boundary)
boundary_one <- st_union(toronto_boundary)
plot(boundary_one)
boundary_flat <- st_transform(boundary_one, crs = 4326)
plot(boundary_flat)
boundary_w <- as.owin(as_Spatial(boundary_flat))
>>>>>>> Stashed changes
