#converting points from WGS84 to UTM17N
coordinates(Toronto_Points) <- c("LNG", "LAT")
proj4string(Toronto_Points) <- CRS("+proj=longlat +datum=WGS84")
Toronto_Points.trfm <- spTransform(Toronto_Points, CRS("+proj=utm +zone=17 ellps=WGS84"))
Toronto_Points <- as(Toronto_Points.trfm, "SpatialPoints")
Toronto_Points.df <- as.data.frame(Toronto_Points)
#convert Toronto boundary points to polygon
poly <- Polygon(Toronto_Points.df)
poly2 <- Polygons(list(poly),1)
Toronto_Poly <- SpatialPolygons(list(poly2))
plot(Toronto_Poly)
#convert polygon to simple feature and assign as window
Toronto_Poly <- st_as_sf(Toronto_Poly)
Toronto.owin <- as.owin(as(Toronto_Poly, "Spatial"))
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
plot(collisions.ppp)
q_count_coll <- quadratcount(collisions.ppp, nx = 3, ny = 3)
table(q_count_coll)
plot(q_count_coll)
q_count_coll <- quadratcount(collisions.ppp, nx = 3, ny = 3)
table(q_count_coll)
plot(q_count_coll)
q_test_coll <- quadrat.test(collisions.ppp, nx = 3, ny = 3)
q_test_coll
plot(q_test_coll)
speedsigns.ppp <- as.ppp(st_coordinates(School_ZonesPCS.sf), W = Toronto.owin)
summary(speedsigns.ppp)
plot(speedsigns.ppp)
q_count_sss <- quadratcount(speedsigns.ppp, nx = 3, ny = 3)
table(q_count_sss)
plot(q_count_sss)
plot(q_count_coll)
q_test_sss <- quadrat.test(speedsigns.ppp, nx = 3, ny = 3)
q_test_sss
plot(q_test_sss)
Schools.ppp <- as.ppp(st_coordinates(SchoolsPCS.sf), W = Toronto.owin)
summary(Schools.ppp)
plot(Schools.ppp)
q_count_School <- quadratcount(Schools.ppp, nx = 5, ny = 6)
q_count_coll <- quadratcount(collisions.ppp, nx = 5, ny = 6)
q_count_sss <- quadratcount(speedsigns.ppp, nx = 5, ny = 6)
table(q_count_School)
plot(q_count_School)
plot(q_count_sss)
plot(q_count_coll)
q_test_School <- quadrat.test(Schools.ppp, nx = 3, ny = 3)
q_test_School
plot(q_test_School)
#similar question from stack exchange: https://gis.stackexchange.com/questions/292327/creating-buffers-around-points-and-merging-with-spatialpolygonsdataframe-to-crea
#prequisites: load sf and sp libraries (done)
#convert data frame and/or sp to sf using st_as_sf (done)
#plot to make sure nothing has gone wrong using 'target_km = st_transform(target, "+proj=utm +zone=17N +datum=WGS84 +units=km")'
SZ_km = st_transform(School_ZonesPCS.sf, "+proj=utm +zone=17N +datum=WGS84 +units=km")
SZ_km
Coll_km = st_transform(CollisionsPCS.sf, "+proj=utm +zone=17N +datum=WGS84 +units=km")
Coll_km
#error: cannot transform sfc object with missing crs
#help with error: https://r-spatial.github.io/sf/reference/st_crs.html
View(Collisions)
View(Collisions)
View(Collisions)
rm(list = ls())
library(leaflet.extras)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
fullcollisionsfile = "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Full_Collisions.csv"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Full_Collisions<-read_csv(url(fullcollisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Full_Collisions <- Full_Collisions %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 20, iconHeight = 20
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 20, iconHeight = 20
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 20, iconHeight = 20
)
smallzonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 10, iconHeight = 10
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 20, iconHeight = 20
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 20, iconHeight = 20
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 20, iconHeight = 20
)
smallzonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 10, iconHeight = 10
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#leaflet map containing the point locations of 2019 collisions
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
#setting necessary coords as numeric values
Collisions$lng <- as.numeric(Collisions$lng)
Collisions$lat <- as.numeric(Collisions$lat)
Full_Collisions$lng <- as.numeric(Full_Collisions$lng)
Full_Collisions$lat <- as.numeric(Full_Collisions$lat)
#creation of 2019 collisions heatmap
collisions.hmap <- leaflet(data = Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 10) %>%
addTiles()
#2019 collisions heatmap (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 17)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = schoolsIcon)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 20, iconHeight = 20
)
smallschoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 10, iconHeight = 10
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 20, iconHeight = 20
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 20, iconHeight = 20
)
smallzonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 10, iconHeight = 10
)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
#2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
#2006 – 2019 collisions heatmap with school zone markers (will add necessary map elements like a title soon)
fullcollisions.hmap <- leaflet(data = Full_Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 10) %>%
addTiles()
fullcollisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
fullcollisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
g_pattern1 <- Gest(collisions.ppp, correction = "none")
rm(list = ls())
library(leaflet.extras)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
fullcollisionsfile = "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Full_Collisions.csv"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Full_Collisions<-read_csv(url(fullcollisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Full_Collisions <- Full_Collisions %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
g_pattern1 <- Gest(collisions.ppp, correction = "none")
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
Toronto_Points.df <- as.data.frame(Toronto_Points)
#convert Toronto boundary points to polygon
poly <- Polygon(Toronto_Points.df)
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Full_Collisions <- Full_Collisions %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
rm(list = ls())
library(leaflet.extras)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
fullcollisionsfile = "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Full_Collisions.csv"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Full_Collisions<-read_csv(url(fullcollisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Full_Collisions <- Full_Collisions %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#test plots
ggplot(data = Collisions.sf) +
geom_sf() +
labs(title = "Collisions")
ggplot(data = School_Zones.sf) +
geom_sf() +
labs(title = "School Zone Locations")
ggplot(data = Schools.sf) +
geom_sf() +
labs(title = "School Locations")
ggplot() +
geom_sf(data = Schools.sf, color = "grey") +
geom_sf(data = School_Zones.sf, color = "yellow") +
geom_sf(data = Collisions.sf, color = "red") +
labs(title = "Collisions & Schools & School Zones")
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 20, iconHeight = 20
)
smallschoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 10, iconHeight = 10
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 20, iconHeight = 20
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 20, iconHeight = 20
)
smallzonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 10, iconHeight = 10
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
#leaflet map containing the point locations of 2019 collisions
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
#setting necessary coords as numeric values
Collisions$lng <- as.numeric(Collisions$lng)
Collisions$lat <- as.numeric(Collisions$lat)
Full_Collisions$lng <- as.numeric(Full_Collisions$lng)
Full_Collisions$lat <- as.numeric(Full_Collisions$lat)
#creation of 2019 collisions heatmap
collisions.hmap <- leaflet(data = Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 10) %>%
addTiles()
#2019 collisions heatmap
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 17)
#2019 collisions heatmap with school zone markers
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
#2019 collisions heatmap with school locations
collisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
#2006 – 2019 collisions heatmap with school zone markers
fullcollisions.hmap <- leaflet(data = Full_Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 10) %>%
addTiles()
fullcollisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = School_Zones.sf, icon = smallzonesIcon)
#2006 – 2019 collisions heatmap with school location markers
fullcollisions.hmap %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 16) %>%
addMarkers(data = Schools.sf, icon = smallschoolIcon)
#Conversion of WGS84 lat and lng points to corresponding UTM17N eastings and northings
CollisionsXY <- Collisions %>%
select(lng, lat)
CollisionsXY$lat <- as.numeric(CollisionsXY$lat)
CollisionsXY$lng <- as.numeric(CollisionsXY$lng)
coordinates(CollisionsXY) <- c("lng", "lat")
proj4string(CollisionsXY) <- CRS("+proj=longlat +datum=WGS84")
Collisions.trfm <- spTransform(CollisionsXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
CollisionsPCS <- as(Collisions.trfm, "SpatialPoints")
#USE FOR QUADRAT
CollisionsPCS.sf <- st_as_sf(CollisionsPCS)
Collisionscopy.sf <- Collisions.sf
Collisionscopy.sf[, "geometry"] <- CollisionsPCS.sf[,"geometry"]
#USE 'CollisionsPCS.sf' FOR QUADRAT
CollisionsPCS.sf <- Collisionscopy.sf
#######################################################################################
SchoolsXY <- Schools %>%
select(lng, lat)
SchoolsXY$lat <- as.numeric(SchoolsXY$lat)
SchoolsXY$lng <- as.numeric(SchoolsXY$lng)
coordinates(SchoolsXY) <- c("lng", "lat")
proj4string(SchoolsXY) <- CRS("+proj=longlat +datum=WGS84")
Schools.trfm <- spTransform(SchoolsXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
SchoolsPCS <- as(Schools.trfm, "SpatialPoints")
SchoolsPCS.sf <- st_as_sf(SchoolsPCS)
Schoolscopy.sf <- Schools.sf
Schoolscopy.sf[, "geometry"] <- SchoolsPCS.sf[,"geometry"]
#USE 'SchoolsPCS.sf' FOR QUADRAT
SchoolsPCS.sf <- Schoolscopy.sf
#######################################################################################
School_ZonesXY <- School_Zones %>%
select(lng, lat)
School_ZonesXY$lat <- as.numeric(School_ZonesXY$lat)
School_ZonesXY$lng <- as.numeric(School_ZonesXY$lng)
coordinates(School_ZonesXY) <- c("lng", "lat")
proj4string(School_ZonesXY) <- CRS("+proj=longlat +datum=WGS84")
School_Zones.trfm <- spTransform(School_ZonesXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
School_ZonesPCS <- as(School_Zones.trfm, "SpatialPoints")
#USE FOR QUADRAT
School_ZonesPCS.sf <- st_as_sf(School_ZonesPCS)
zonescopy.sf <- School_Zones.sf
zonescopy.sf[, "geometry"] <- School_ZonesPCS.sf[,"geometry"]
#USE 'SchoolsPCS.sf' FOR QUADRAT
School_ZonesPCS.sf <- zonescopy.sf
#######################################################################################
#read shapefile
toronto_boundary <- st_read(
"data/toronto-boundary-wgs84/citygcs_regional_mun_wgs84.shp")
#convert polygon to group of lines
toronto.lines = st_cast(toronto_boundary,"LINESTRING")
#convert lines to points
toronto_points <- st_cast(toronto.lines, to = "POINT")
toronto_points <- as.data.frame(toronto_points)
#AT THIS POINT I EXTRACTED toronto_points AS A CSV AND SEPARATED THE LNG AND LAT IN SHEETS (Toronto_Points)
#there's an error here. I cut the code block here since the previous part worked.
#converting points from WGS84 to UTM17N
coordinates(Toronto_Points) <- c("LNG", "LAT")
proj4string(Toronto_Points) <- CRS("+proj=longlat +datum=WGS84")
Toronto_Points.trfm <- spTransform(Toronto_Points, CRS("+proj=utm +zone=17 ellps=WGS84"))
Toronto_Points <- as(Toronto_Points.trfm, "SpatialPoints")
Toronto_Points.df <- as.data.frame(Toronto_Points)
#convert Toronto boundary points to polygon
poly <- Polygon(Toronto_Points.df)
poly2 <- Polygons(list(poly),1)
Toronto_Poly <- SpatialPolygons(list(poly2))
plot(Toronto_Poly)
#convert polygon to simple feature and assign as window
Toronto_Poly <- st_as_sf(Toronto_Poly)
Toronto.owin <- as.owin(as(Toronto_Poly, "Spatial"))
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
plot(collisions.ppp)
g_pattern1 <- Gest(collisions.ppp, correction = "none")
g_pattern1 <- Gest(collisions.ppp, correction = "none")
plot(g_pattern1)
