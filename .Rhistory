poly <- Polygon(Toronto_Points.df)
poly2 <- Polygons(list(poly),1)
Toronto_Poly <- SpatialPolygons(list(poly2))
plot(Toronto_Poly)
#convert polygon to simple feature and assign as window
Toronto_Poly <- st_as_sf(Toronto_Poly)
Toronto.owin <- as.owin(as(Toronto_Poly, "Spatial"))
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
plot(collisions.ppp)
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
plot(collisions.ppp)
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
#plot(collisions.ppp)
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
plot(collisions.ppp)
q_count <- quadratcount(collisions.ppp, nx = 3, ny = 3)
table(q_count)
plot(q_count)
q_test <- quadrat.test(collisions.ppp, nx = 3, ny = 3)
q_test
plot(q_test)
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#Conversion of WGS84 lat and lng points to corresponding UTM17N eastings and northings
CollisionsXY <- Collisions %>%
select(lng, lat)
CollisionsXY$lat <- as.numeric(CollisionsXY$lat)
CollisionsXY$lng <- as.numeric(CollisionsXY$lng)
coordinates(CollisionsXY) <- c("lng", "lat")
proj4string(CollisionsXY) <- CRS("+proj=longlat +datum=WGS84")
Collisions.trfm <- spTransform(CollisionsXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
CollisionsPCS <- as(Collisions.trfm, "SpatialPoints")
#USE FOR QUADRAT
CollisionsPCS.sf <- st_as_sf(CollisionsPCS)
Collisionscopy.sf <- Collisions.sf
Collisionscopy.sf[, "geometry"] <- CollisionsPCS.sf[,"geometry"]
#USE 'CollisionsPCS.sf' FOR QUADRAT
CollisionsPCS.sf <- Collisionscopy.sf
#######################################################################################
SchoolsXY <- Schools %>%
select(lng, lat)
SchoolsXY$lat <- as.numeric(SchoolsXY$lat)
SchoolsXY$lng <- as.numeric(SchoolsXY$lng)
coordinates(SchoolsXY) <- c("lng", "lat")
proj4string(SchoolsXY) <- CRS("+proj=longlat +datum=WGS84")
Schools.trfm <- spTransform(SchoolsXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
SchoolsPCS <- as(Schools.trfm, "SpatialPoints")
SchoolsPCS.sf <- st_as_sf(SchoolsPCS)
Schoolscopy.sf <- Schools.sf
Schoolscopy.sf[, "geometry"] <- SchoolsPCS.sf[,"geometry"]
#USE 'SchoolsPCS.sf' FOR QUADRAT
SchoolsPCS.sf <- Schoolscopy.sf
#######################################################################################
School_ZonesXY <- School_Zones %>%
select(lng, lat)
School_ZonesXY$lat <- as.numeric(School_ZonesXY$lat)
School_ZonesXY$lng <- as.numeric(School_ZonesXY$lng)
coordinates(School_ZonesXY) <- c("lng", "lat")
proj4string(School_ZonesXY) <- CRS("+proj=longlat +datum=WGS84")
School_Zones.trfm <- spTransform(School_ZonesXY, CRS("+proj=utm +zone=17 ellps=WGS84"))
School_ZonesPCS <- as(School_Zones.trfm, "SpatialPoints")
#USE FOR QUADRAT
School_ZonesPCS.sf <- st_as_sf(School_ZonesPCS)
zonescopy.sf <- School_Zones.sf
zonescopy.sf[, "geometry"] <- School_ZonesPCS.sf[,"geometry"]
#USE 'SchoolsPCS.sf' FOR QUADRAT
School_ZonesPCS.sf <- zonescopy.sf
#######################################################################################
#read shapefile
toronto_boundary <- st_read(
"data/toronto-boundary-wgs84/citygcs_regional_mun_wgs84.shp")
#convert polygon to group of lines
toronto.lines = st_cast(toronto_boundary,"LINESTRING")
#convert lines to points
toronto_points <- st_cast(toronto.lines, to = "POINT")
toronto_points <- as.data.frame(toronto_points)
#AT THIS POINT I EXTRACTED toronto_points AS A CSV AND SEPARATED THE LNG AND LAT IN SHEETS (Toronto_Points)
#there's an error here. I cut the code block here since the previous part worked.
#converting points from WGS84 to UTM17N
coordinates(Toronto_Points) <- c("LNG", "LAT")
proj4string(Toronto_Points) <- CRS("+proj=longlat +datum=WGS84")
Toronto_Points.trfm <- spTransform(Toronto_Points, CRS("+proj=utm +zone=17 ellps=WGS84"))
Toronto_Points <- as(Toronto_Points.trfm, "SpatialPoints")
Toronto_Points.df <- as.data.frame(Toronto_Points)
#convert Toronto boundary points to polygon
poly <- Polygon(Toronto_Points.df)
poly2 <- Polygons(list(poly),1)
Toronto_Poly <- SpatialPolygons(list(poly2))
plot(Toronto_Poly)
#convert polygon to simple feature and assign as window
Toronto_Poly <- st_as_sf(Toronto_Poly)
Toronto.owin <- as.owin(as(Toronto_Poly, "Spatial"))
collisions.ppp <- as.ppp(st_coordinates(CollisionsPCS.sf), W = Toronto.owin)
summary(collisions.ppp)
plot(collisions.ppp)
q_count_coll <- quadratcount(collisions.ppp, nx = 3, ny = 3)
table(q_count_coll)
plot(q_count_coll)
plot(q_count_coll)
q_test_coll <- quadrat.test(collisions.ppp, nx = 3, ny = 3)
q_test_coll
plot(q_test_coll)
plot(q_test_coll)
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
rm(list = ls())
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
collisions.map
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
addHeatmap(collisions.map, lng = lng, lat = lat, intensity = NULL,
layerId = NULL, group = NULL, minOpacity = 0.05, max = 1,
radius = 25, blur = 15, gradient = NULL, cellSize = NULL,
data = leaflet::getMapData(map))
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
collisions.hmap <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addHeatmap(collisions.map, lng = lng, lat = lat, intensity = NULL,
layerId = NULL, group = NULL, minOpacity = 0.05, max = 1,
radius = 25, blur = 15, gradient = NULL, cellSize = NULL,
data = leaflet::getMapData(map))
rm(list = ls())
install.packages("leaflet")
library(leaflet)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
install.packages("leaflet")
rm(list = ls())
install.packages("leaflet")
library(leaflet)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
collisions.hmap <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addHeatmap(lng = ~lng, lat ~ lat)
View(collisions.map)
View(Collisions.sf)
collisions.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon)
collisions.map
collisions.hmap <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addHeatmap(lng = ~lng, lat = ~lat, blur = 40, max = 1, radius =25)
install.packages("ggmap")
library(ggmap)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
install.packages("ggmap")
library(ggmap)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
library(sp)
library(leaflet)
library(tidyverse)
library(gstat)
library(sf)
library(readr)
library(spatstat)
library(maptools)
library(dplyr)
#importing necessary files from GitHub
collisionsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Motor%20Vehicle%20Collisions/Motor%20Vehicle%20Collisions%20with%20KSI%20Data%20True.csv?token=AS22SR2ZGZO34O7CM56XBFTANDP44"
zonesfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Stationary%20Sign%20locations/Stationary%20Sign%20Locations%20True%20-%20Stationary%20Sign%20locations.csv?token=AS22SR3YXJ3MMPTFKRTZFIDANDQKW"
schoolsfile="https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/point-school-locations-wgs84/School%20Locations%20True%20-%20School%20locations-all%20types%20data.csv?token=AS22SR3J4NEF54PS3OOARYTANDQOY"
boundsfile <- "https://raw.githubusercontent.com/JustinBrassard/4GA3_Project_And_Proposal/main/data/Toronto%20Boundary%20Points%20UTM15N/Toronto_Points.csv"
Motor_Vehicle_Collisions_with_KSI_Data_True<-read_csv(url(collisionsfile))
Stationary_Sign_Locations_True<-read_csv(url(zonesfile))
School_Locations_True<-read_csv(url(schoolsfile))
Toronto_Points<-read_csv(url(boundsfile))
#separation of 'geometry' column into two lng & lat columns for main data sets
School_Zones <- Stationary_Sign_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Collisions <- Motor_Vehicle_Collisions_with_KSI_Data_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
Schools <- School_Locations_True %>%
separate(geometry, into = c('lng', 'lat'), sep = ', ')
#df to sf conversion of main data sets
School_Zones.sf <- st_as_sf(School_Zones, coords = c("lng", "lat"))
Collisions.sf <- st_as_sf(Collisions, coords = c("lng", "lat"))
Schools.sf <- st_as_sf(Schools, coords = c("lng", "lat"))
#icon creation for main leaflet (TEST)
schoolIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-house-icon-16.png",
iconWidth = 30, iconHeight = 30
)
zonesIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/school-icon-png-40.png",
iconWidth = 30, iconHeight = 30
)
collisionsIcon <- makeIcon(
iconUrl = "https://www.freeiconspng.com/uploads/-alert-attention-danger-exclamation-safety-warning-icon--icon--33.png",
iconWidth = 30, iconHeight = 30
)
#Main data sets leaflet (TEST)
overview.map <- leaflet() %>% addTiles() %>%
addMarkers(data = Collisions.sf, icon = collisionsIcon) %>%
addMarkers(data = School_Zones.sf, icon = zonesIcon) %>%
addMarkers(data = Schools.sf, icon = schoolIcon)
overview.map
View(Collisions)
map <- get_map(location = c(lon = -79.3, lat = 43.65, zoom = 17,
maptype = "satellite", source = "google")
ggmap(map) +
map <- get_map(location = c(lon = -79.3, lat = 43.65, zoom = 17,
maptype = "satellite", source = "google")
ggmap(map) +
map <- get_map(location = c(lon = -79.3, lat = 43.65, zoom = 17,
maptype = "satellite", source = "google")
map <- get_map(location = c(lon = -79.3, lat = 43.65, zoom = 17,
maptype = "satellite", source = "google"))
?get_map
?get_map
map <- get_map(location = c(lon = -79.3, lat = 43.65), zoom = 17,
maptype = "satellite", source = "google"))
?get_map
map <- get_map(location = c(lon = -79.3, lat = 43.65), zoom = 17,
maptype = "satellite", source = "google")
?get_map
map <- get_map(location = c(lon = -79.3, lat = 43.65), zoom = 17,
maptype = "satellite", source = "osm")
?get_map
map <- get_map(location = c(lon = -79.3, lat = 43.65), zoom = 17,
maptype = "satellite", source = "stamen")
?get_map
?get_stamenmap
map <- get_map(location = c(lon = -79.3, lat = 43.65), zoom = 17,
maptype = "satellite", source = "stamen")
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = c("terrain",
"terrain-background", "terrain-labels", "terrain-lines", "toner",
"toner-2010", "toner-2011", "toner-background", "toner-hybrid",
"toner-labels", "toner-lines", "toner-lite", "watercolor"),
crop = TRUE, messaging = FALSE, urlonly = FALSE,
color = c("color", "bw"), force = FALSE, where = tempdir(), ...)
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = c"terrain"),
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain"),
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain"),
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain"),
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain")
crop = TRUE, messaging = FALSE urlonly = FALSE, color = "color")
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain")
crop = TRUE, color = "color")
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain")
crop = TRUE color = "color")
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain",
crop = TRUE, color = "color")
ggmap(map) +
labs(x="longitude", y="latitude") +
stat_density2d(data=data, aes(x=CrdLonDeg, y=CrdLatDeg, alpha= ..level.., fill= ..level..), colour=FALSE,
geom="polygon", bins=100) +
scale_fill_gradientn(colours=c(rev(rainbow(100, start=0, end=.7)))) + scale_alpha(range=c(0,.8)) +
guides(alpha=FALSE,fill=FALSE)
View(Collisions)
?get_map
?get_stamenmap
map <- get_stamenmap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, maptype = "terrain",
crop = TRUE, color = "color")
ggmap(map) +
labs(x="longitude", y="latitude") +
stat_density2d(data=Collisions, aes(x=lng, y=lat, alpha= ..level.., fill= ..level..), colour=FALSE,
geom="polygon", bins=100) +
scale_fill_gradientn(colours=c(rev(rainbow(100, start=0, end=.7)))) + scale_alpha(range=c(0,.8)) +
guides(alpha=FALSE,fill=FALSE)
View(Collisions)
?get_map
?get_stamenmap
center = c(lon = 0.5406294, lat = 52.3451601)
qmap(center, zoom = 16, source = "stamen", maptype = "watercolor")+
geom_point(aes(x = longitude, y = latitude), size = 4, shape = 21,
fill = "dark green", data = Tcoords)
?register_google
?get_map
?get_stamenmap
center = c(lon = 0.5406294, lat = 52.3451601)
qmap(center, zoom = 16, source = "stamen", maptype = "watercolor")+
geom_point(aes(x = longitude, y = latitude), size = 4, shape = 21,
fill = "dark green", data = Tcoords)
m2 <- leaflet(data = Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 16) %>%
addTiles()
m2 %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 25)
library(leaflet)
m2 <- leaflet(data = Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 16) %>%
addTiles()
m2 %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = 1,
blur = 40, max = 1, radius = 25)
View(Collisions)
library(leaflet)
m2 <- leaflet(data = Collisions) %>%
setView(lng = -79.3, lat = 43.65, zoom = 16) %>%
addTiles()
m2 %>% addHeatmap(lng = ~lng, lat = ~lat, intensity = ~HOUR,
blur = 40, max = 1, radius = 25)
